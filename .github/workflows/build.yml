name: Deploy to AWS ECR

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches: [main, develop]
    paths:
      - "Dockerfile"
      - "env.yml"
      - "install.R"
      - "install_biocmanager.R"

  push:
    branches: [main, develop]
    paths:
      - "Dockerfile"
      - "env.yml"
      - "install.R"
      - "install_biocmanager.R"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1 # Set your AWS region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull existing image from ECR as cache
        run: docker pull ${{ steps.login-ecr.outputs.registry }}/reports:latest || true

      - name: Set image tag based on branch
        id: set-tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "::set-output name=IMAGE_TAG::latest"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "::set-output name=IMAGE_TAG::staging"
          else
            echo "::set-output name=IMAGE_TAG::${{ github.sha }}"
          fi

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: reports
          IMAGE_TAG: ${{ steps.set-tag.outputs.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --cache-from ${{ steps.login-ecr.outputs.registry }}/reports:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
